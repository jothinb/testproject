<HTML>
<BODY bgcolor="#ffffff" text="#000000">
<A NAME = "Proc_152543e11c884508b4d60da0eba33239"></A>
<TABLE WIDTH=100% CELLPADDING=1 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="darkblue" ><B><FONT SIZE=5 COLOR="white" FACE="Arial">PL_CREATE_STACK&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Owner&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">BNSTAGE&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Description&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">SQL&nbsp;</FONT></B></TD>
<TD><TT><TT>CREATE OR REPLACE PROCEDURE BNSTAGE.PL_CREATE_STACK</TT><BR><TT>IS</TT><BR><TT> rn&nbsp&nbsp&nbsp&nbsp&nbsp NUMBER(20);</TT><BR><TT> now&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> i&nbsp&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> xstart&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT>&nbsp&nbsp ystart&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT></TT><BR><TT> xval&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> yval&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> unit_length&nbsp&nbsp NUMBER;</TT><BR><TT> size_code&nbsp&nbsp CHAR(4);</TT><BR><TT> stack_height&nbsp&nbsp NUMBER;</TT><BR><TT></TT><BR><TT> min_NEAR_TRUCK_SPOT&nbsp&nbsp NUMBER;</TT><BR><TT> max_NEAR_TRUCK_SPOT&nbsp&nbsp NUMBER;</TT><BR><TT> skip_xloc&nbsp&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> min_TWENTIES&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT> max_TWENTIES&nbsp&nbsp&nbsp NUMBER;</TT><BR><TT></TT><BR><TT> pv&nbsp&nbsp&nbsp&nbsp pools_v;</TT><BR><TT> dv&nbsp&nbsp&nbsp&nbsp dests_v;</TT><BR><TT> iv&nbsp&nbsp&nbsp&nbsp inits_v;</TT><BR><TT> sv&nbsp&nbsp&nbsp&nbsp ships_v;</TT><BR><TT></TT><BR><TT> l_pool_id&nbsp&nbsp CHAR(5);</TT><BR><TT> l_unit_init&nbsp&nbsp CHAR(4);</TT><BR><TT> l_destination CHAR(11);</TT><BR><TT> l_shipper&nbsp&nbsp CHAR(12);</TT><BR><TT> l_out_in&nbsp&nbsp NUMBER;</TT><BR><TT></TT><BR><TT>BEGIN</TT><BR><TT></TT><BR><TT> min_NEAR_TRUCK_SPOT := 1;</TT><BR><TT> max_NEAR_TRUCK_SPOT := 6;</TT><BR><TT> skip_xloc := 15;</TT><BR><TT> min_TWENTIES := 25;</TT><BR><TT> max_TWENTIES := 26;</TT><BR><TT></TT><BR><TT> select (new_time(sysdate,'CDT','GMT') - to_date('01-jan-1970','dd-mon-yyyy')) * (24*60*60)</TT><BR><TT>&nbsp&nbsp into now</TT><BR><TT>&nbsp&nbsp from dual;</TT><BR><TT></TT><BR><TT> dbms_random.initialize(now);</TT><BR><TT></TT><BR><TT> i := 0;</TT><BR><TT> xstart := 450 + 215;</TT><BR><TT> ystart := 278 + 45;</TT><BR><TT></TT><BR><TT> pv := pools_v( pools_t('CQSQ'), pools_t('HJBT'), pools_t('LABP'), pools_t('TNWA'), pools_t('WCCP'), pools_t('BNRR'), pools_t('MATU') );</TT><BR><TT> dv := dests_v( dests_t('CICERO&nbsp&nbsp&nbsp IL'), dests_t('ATLANTA&nbsp&nbsp GA'), dests_t('PEARLAND TX'), dests_t('CITCOMMERCA'), dests_t('STLOUIS&nbsp&nbsp MO'), dests_t('MEMPHIS&nbsp&nbsp TN'), dests_t('NEWORLEANLA') );</TT><BR><TT> iv := inits_v( inits_t('APLU'), inits_t('NYKU'), inits_t('MOLU'), inits_t('JBHU'), inits_t('HJCU'), inits_t('HDMU'), inits_t('OOLU') );</TT><BR><TT> sv := ships_v( ships_t('CHINASHINAME'), ships_t('EVERGRSHIAGE'), ships_t('HANJINSHIPPI'), ships_t('HYUNDAINTERM'), ships_t('NYKINTL'), ships_t('OOCLUSA'), ships_t('YANGMINMARLI') );</TT><BR><TT></TT><BR><TT> FOR xloc IN 1..29 LOOP</TT><BR><TT>&nbsp&nbsp IF xloc != skip_xloc THEN</TT><BR><TT>&nbsp&nbsp&nbsp FOR slice in 1..4 LOOP</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF&nbsp&nbsp xloc >= min_NEAR_TRUCK_SPOT and</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp xloc <= max_NEAR_TRUCK_SPOT THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp stack_height := DBMS_RANDOM.VALUE(0, 2) + 3;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp stack_height := DBMS_RANDOM.VALUE(0, 4) + 1;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF&nbsp&nbsp xloc >= min_TWENTIES and</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp xloc <= max_TWENTIES THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp unit_length := 240;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp size_code := 'KG1';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp unit_length := 480;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp size_code := 'KG5';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp l_out_in := trunc( DBMS_RANDOM.VALUE(0, 2) );</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp l_shipper := sv( trunc( DBMS_RANDOM.VALUE(0,7) ) + 1).shipper;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF l_out_in = 1 THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp l_destination := dv(trunc( DBMS_RANDOM.VALUE(0, 7) ) + 1).dest_name;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp FOR level in 1 .. stack_height LOOP</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp i := i + 1;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp l_pool_id := pv(trunc( DBMS_RANDOM.VALUE(0, 7) ) + 1).pool_id_code;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp l_unit_init := iv(trunc( DBMS_RANDOM.VALUE(0, 7) ) + 1).unit_init;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp IF l_out_in = 0 THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_destination := dv(trunc( DBMS_RANDOM.VALUE(0, 7) ) + 1).dest_name;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp INSERT INTO UNITS VALUES</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp (&nbsp&nbsp l_unit_init,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp i,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 586,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 80,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 11,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'U201',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp size_code,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp '4611110',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'HJCU',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_shipper,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_shipper,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'W',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp now,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'CLINTON WILL',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'COMPCODE01',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'SCRIPT',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'C',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 2,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 96,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp unit_length,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 102,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 7500,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 1088571600,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'BNSF',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_destination,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'BNSF',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_destination,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'BNSF',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_out_in,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'N',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'G',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'TA',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp l_pool_id,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'S',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp -2,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 80,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp to_number( reverse( to_char(i))),</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp '123',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'TX',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'N',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'C',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 'O',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp '002',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp '9',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp xstart + trunc((xloc-1)*430.35),</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ystart + trunc((slice-1)*89.25),</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 90 * level,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp '85',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ' ',</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0,</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 0 );</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END LOOP;</TT><BR><TT>&nbsp&nbsp&nbsp END LOOP;</TT><BR><TT>&nbsp&nbsp&nbsp COMMIT;</TT><BR><TT>&nbsp&nbsp END IF;</TT><BR><TT> END LOOP;</TT><BR><TT></TT><BR><TT> dbms_random.terminate;</TT><BR><TT></TT><BR><TT>END PL_CREATE_STACK;</TT>&nbsp;</TT></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_CREATE_STACK Object Permissions&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">User/Role Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Grantee Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Permission Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Action Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is Action Extended&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is System&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_CREATE_STACK Bound Attachments&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=30% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=46% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Current Value&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<HR>
<A NAME = "Proc_9459bde9d2764e3fa3c46346bf3ddcaa"></A>
<TABLE WIDTH=100% CELLPADDING=1 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="darkblue" ><B><FONT SIZE=5 COLOR="white" FACE="Arial">PL_REMOVE_NON_MATE_ADJ&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Owner&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">BNSTAGE&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Description&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">SQL&nbsp;</FONT></B></TD>
<TD><TT><TT>CREATE OR REPLACE PROCEDURE BNSTAGE.PL_Remove_Non_Mate_Adj( i_unit_init&nbsp&nbsp&nbsp&nbsp&nbsp IN&nbsp&nbsp UNITS.UNIT_INIT%TYPE,&nbsp&nbsp&nbsp&nbsp&nbsp /* Input unit initial */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp i_unit_num&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IN&nbsp&nbsp UNITS.UNIT_NBR%TYPE )&nbsp&nbsp&nbsp&nbsp&nbsp /* Input unit number */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp AS</TT><BR><TT></TT><BR><TT>BEGIN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp /* If the unit is a chassis, remove all units below */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp /* and any chassis above.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF PL_Check_Chassis_Type(i_unit_init, i_unit_num) > 0 THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp BEGIN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp DELETE FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_1_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_1_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp DELETE FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND ('S' = (SELECT TYPE_IND FROM UNITS</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_INIT = UNIT_1_INIT</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_NBR = UNIT_1_NBR));</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ELSE&nbsp&nbsp&nbsp&nbsp /* Unit is a non-chassis, delete all units above&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* and any non-chassis below&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp BEGIN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp DELETE FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp DELETE FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_1_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_1_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND ('S' <> (SELECT TYPE_IND FROM UNITS</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_INIT = UNIT_2_INIT</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_NBR = UNIT_2_NBR));</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END If;</TT><BR><TT></TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp COMMIT;</TT><BR><TT></TT><BR><TT>END PL_Remove_Non_Mate_Adj;</TT>&nbsp;</TT></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_REMOVE_NON_MATE_ADJ Object Permissions&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">User/Role Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Grantee Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Permission Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Action Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is Action Extended&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is System&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_REMOVE_NON_MATE_ADJ Bound Attachments&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=30% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=46% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Current Value&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<HR>
<A NAME = "Proc_439c3d47c1564b748a51b3085689f7e3"></A>
<TABLE WIDTH=100% CELLPADDING=1 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="darkblue" ><B><FONT SIZE=5 COLOR="white" FACE="Arial">PL_UPDATE_MOUNT_STACK&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Owner&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">BNSTAGE&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Description&nbsp;</FONT></B></TD>
<TD><FONT SIZE=2 FACE="Arial">&nbsp;</FONT></TD>
</TR>
<TR>
<TD VALIGN=TOP WIDTH=20%% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">SQL&nbsp;</FONT></B></TD>
<TD><TT><TT>CREATE OR REPLACE PROCEDURE BNSTAGE.PL_Update_Mount_Stack ( i_unit_init&nbsp&nbsp&nbsp&nbsp&nbsp IN&nbsp&nbsp UNITS.UNIT_INIT%TYPE,&nbsp&nbsp&nbsp&nbsp&nbsp /* Input unit initial */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp i_unit_num&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IN&nbsp&nbsp UNITS.UNIT_NBR%TYPE )&nbsp&nbsp&nbsp&nbsp&nbsp /* Input unit number */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp AS</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ms_val&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp CHAR(1);</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp o_val&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp INTEGER;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp l_count&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp INTEGER;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp o_count&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp INTEGER;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp l_unit_type&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp CHAR(1);</TT><BR><TT></TT><BR><TT>BEGIN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ms_val&nbsp&nbsp := ' ';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp o_val&nbsp&nbsp&nbsp := -2;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp /* If the unit is a chassis, then check to see if a container&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp /* is mounted on top.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF PL_Check_Chassis_Type(i_unit_init, i_unit_num) > 0 THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp BEGIN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* Check the type of the unit which is above (if any)&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT TYPE_IND INTO l_unit_type FROM UNITS, ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_INIT = UNIT_1_INIT</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_NBR = UNIT_1_NBR</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR =&nbsp&nbsp i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND ROWNUM = 1;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* If the unit above is a chassis, then the given unit&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* is stacked, otherwise it is mounted.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_unit_type = 'S' THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'S';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'M';</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp BEGIN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* Set the Inbound/Outbound status for the unit based&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* on the I/O status of the mounted container(s).&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT COUNT(*) INTO l_count FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_count > 0 THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT COUNT(*) INTO o_count FROM UNITS, ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_INIT = UNIT_1_INIT</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_NBR = UNIT_1_NBR</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND OTBD_IND > 0</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR =&nbsp&nbsp i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_count = o_count THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp o_val := 1;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp EXCEPTION</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHEN OTHERS THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp o_val := 0;</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END;</TT><BR><TT></TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp EXCEPTION</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHEN OTHERS THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* Nothing above, check to see if there is anything below.&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT COUNT(*) INTO l_count FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_1_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_1_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* If there is something below, then the unit is&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* stacked, otherwise it is neither.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_count > 0 THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'S';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp o_val := -1;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp BEGIN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* Check the type of the unit which is below (if any)&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT TYPE_IND INTO l_unit_type FROM UNITS, ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_INIT = UNIT_2_INIT</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_NBR = UNIT_2_NBR</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_1_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_1_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND ROWNUM = 1;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* If the unit below is a chassis, then the given unit&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* is mounted, otherwise it is stacked.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_unit_type = 'S' THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'M';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'S';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp EXCEPTION</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHEN OTHERS THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* Nothing below; check to see if there is anything above&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp SELECT COUNT(*) INTO l_count FROM ADJACENCY</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE&nbsp&nbsp&nbsp UNIT_2_INIT = i_unit_init</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND UNIT_2_NBR = i_unit_num</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp AND DIRECTION = 20;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* If there is something above, then the unit is&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /* stacked, otherwise it is neither.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp */</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF l_count > 0 THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'S';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END If;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp IF o_val > -2 THEN</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp IF o_val = -1 THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp UPDATE UNITS SET MONT_STAK_IND = ms_val, OTBD_IND = NULL</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE (UNIT_INIT = i_unit_init) AND (UNIT_NBR = i_unit_num);</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp UPDATE UNITS SET MONT_STAK_IND = ms_val, OTBD_IND = o_val</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE (UNIT_INIT = i_unit_init) AND (UNIT_NBR = i_unit_num);</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp ELSE</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp UPDATE UNITS SET MONT_STAK_IND = ms_val</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE (UNIT_INIT = i_unit_init) AND (UNIT_NBR = i_unit_num);</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp END IF;</TT><BR><TT></TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp COMMIT;</TT><BR><TT></TT><BR><TT>&nbsp&nbsp&nbsp&nbsp EXCEPTION</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHEN OTHERS THEN</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp ms_val := 'E';</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp UPDATE UNITS SET MONT_STAK_IND = ms_val</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp WHERE (UNIT_INIT = i_unit_init) AND (UNIT_NBR = i_unit_num);</TT><BR><TT>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp COMMIT;</TT><BR><TT></TT><BR><TT>END PL_Update_Mount_Stack;</TT>&nbsp;</TT></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_UPDATE_MOUNT_STACK Object Permissions&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">User/Role Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Grantee Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Permission Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Action Type&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is Action Extended&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=22% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Is System&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<P>
<TABLE WIDTH=100% CELLPADDING=3 BORDER=2>
<TR>
<TD VALIGN=TOP BGCOLOR="LIGHTGREY" ><B><FONT SIZE=4 FACE="Arial">PL_UPDATE_MOUNT_STACK Bound Attachments&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<TABLE WIDTH=100% CELLPADDING=2 BORDER=2>
<TR>
<TD VALIGN=TOP  WIDTH=30% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Name&nbsp;</FONT></B></TD>
<TD VALIGN=TOP  WIDTH=46% bgcolor="#87BCFF"><B><FONT SIZE=2 FACE="Arial">Current Value&nbsp;</FONT></B></TD>
</TR>
</TABLE>
<HR>
</BODY>
</HTML>
