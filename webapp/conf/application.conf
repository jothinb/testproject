
# This is the main configuration file for the application.

# Application Context for the webapp
application.context="/oasis/"

# Secret Key
# ~~~~~~~~~~
# The secret key is used to secure cryptographic functions.
# If you deploy your applicaiton to several instances be sure to use the same key!
application.secret="clM1q7:dgZUgjp_1Anaz&gt;I&lt;t6kkpnrf@cO&gt;i1Al&gt;TZbk=fJ[1s2X/zJK5wOjmNTd)"

# The application languages
# ~~~~~~~~~~~~~~~~~~~~~~~~~
application.langs="en,fr"

# Default language supported by the application
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#default_language="en"

# Global object class
# ~~~~~~~~~~~~~~~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named 'default'
#
# db=mem
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:file:play"
# db.default.user=sa
# db.default.password=
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~~~~~~~~~~~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named 'default'.
#
# ebean.default="models.*"

# Logger
# ~~~~~~
# You can also configure logback (http://logback.qos.ch), by providing a logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Body Parsers configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# You can specify the max content length of text bodies.
parsers.text.maxLength=10240K

# WS SSL
# ~~~~~~
# In dev mode, you can accept self signed certificates. You'll want to disable this in production.
ws.acceptAnyCertificate=true

# In dev mode, you may want to test SSL with a self signed certificate on multiple instances, so you'll need to
# disable hostname checking. The only way to do this in Play 2.2.3 is to specify an invalid hostname verifier.
# This must be commented out in production or set to a valid hostname verifier.
# ws.ssl.hostnameVerifierClassName=not.a.valid.class

# Predix configuration
# ~~~~~~~~~~~~~~~~~~~~
# Predix specific properties can be set in app.conf as well. We use app.conf so we can encrypt values on start
# since Play's application.conf does not allow us to write back the file.

# Set how long the user can be idle in seconds.
session.maxInActivity=1800

# When a user selects "Remember Me" on login, you can specify how long the user will stay logged in before they
# need to re-login.
secure.keepMeLoggedIn.duration=30d

# Set the application memory
jvm.memory="-Xmx1024m"

#dashboard service endpoint
# dashboardContextTree="localhost:9000/hopper/service/readerApp/EntityTree/node"
# dashboardViewService="localhost:9000/hopper/service/appConfig/app/1/context"
# dashboardContextMetadata="localhost:9000/hopper/service/readerApp/Entity"

# data.ingestion.host_port="http://localhost:7090"
# data.ingestion.base.uri="/hopper/ingest/v1"
# data.ingestion.excel="/uploadexcel"

# data.consumption.host_port="http://localhost:8090"
# data.consumption.base.uri="/hopper/consume/v1"

http.timeout.msec=300000

#oasis.service.host="10.202.239.194"
oasis.service.host="sit-poc-service.grc-apps.svc.ice.ge.com"
oasis.service.basepath="oasis-services"
